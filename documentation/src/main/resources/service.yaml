openapi: 3.0.0
info:
  title: FUT Patient BFF
  description: API description for FUT Patient BFF.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: FUT
    description: FUT related API's

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/hello:
    get:
      tags:
        - FUT
      summary: Call the FUT hello service
      description: Call the FUT hello service and see if it works

      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/helloResponse'

  /v1/userinfo:
    get:
      tags:
        - User
      description: Info about the user
      summary: get userinfo from AS
      operationId: v1GetUserInfo
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'

  /v1/patients/{patientId}/questionnaires:
    get:
      parameters:
        - in: path
          name: patientId
          required: true
          schema:
            type: string
          description: the id corresponding to the patient of interest
      tags:
        - Patient
      description: Questionnaires for the patient
      summary: get questionnaries
      operationId: v1GetPatientQuestionnary
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionnaires'

  /v1/patients/{patientId}:
    parameters:
      - in: path
        name: patientId
        required: true
        schema:
          type: string
        description: the id corresponding to the patient of interest
      - in: query
        name: careTeamId
        required: false
        schema:
          type: string
        description: the id of the CareTeam to put in the context
    get:
      tags:
        - Patient
      description: Request a patient by id.
      summary: get patient
      operationId: v1GetPatient
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
  schemas:

    CareTeam:
      type: object
      properties:
        id:
          description: An id identifying the careteam
          type: string
        name:
          description: Name of the careteam
          type: string
          example: "Careteam A Grp6"
        status:
          description: Status of the careteam
          type: string
          example: "active"
        reasonCode:
          description: Describes why the care team exists
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              display:
                type: string
        managingOrganization:
          description: Organization responsible for the care team
          type: array
          items:
            type: string

    Patient:
      type: object
      properties:
        id:
          description: an id identifying the patient
          type: string
        firstName:
          description: the patients firstname
          type: string
          example: "Joe"
        lastName:
          description: the patients lastname
          type: string
          example: "Dow"
        cpr:
          description: CPR
          type: string

    UserInfo:
      type: object
      properties:
        uuid:
          type: string
        user_id:
          type: int
        user_type:
          type: string
        cpr:
          type: string
        name:
          type: string
        preferred_username:
          type: string

    Context:
      type: object
      properties:
        careTeams:
          type: array
          items:
            $ref: '#/components/schemas/CareTeam'

    Questionnaires:
      type: array
      items:
        $ref: '#/components/schemas/Questionnaire'

    Questionnaire:
      type: object
      properties:
        resource:
          description: The resource url of the questionnaire
          type: string
        title:
          description: The title
          type: string
        description:
          description: The description to display
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/QuestionnaireItem'

    QuestionnaireItem:
      type: object
      properties:
        text:
          type: string
        type:
          type: string
        required:
          type: boolean
        answerOptions:
          type: array
          items:
            type: string

    helloResponse:
      type: object
      required:
        - name
        - now
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
        now:
          description: Time request was received
          type: string
          format: date-time
        i_can_be_null:
          type: string
          nullable: true
